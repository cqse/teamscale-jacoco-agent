name: Build

on:
  push:
    branches: '**'
    tags: 'v*'
  pull_request:
    branches: '**'

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Gradle
      run: ./gradlew build
    - name: Upload Release Assets
      if: startsWith(github.ref, 'refs/tags/v')
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        file: '{agent/build/distributions/teamscale-jacoco-agent.zip,javaws-wrapper/build/distributions/javaws.zip}'
        file_glob: true
        overwrite: true
    - name: Publish to Maven Central
      run: |
        ./gradlew publishMavenPublicationToMavenRepository \
          -Psigning.secretKeyRingFile=${{ github.workspace }}/.gnupg/secring.gpg \
          -Psigning.password=${{ secrets.MAVEN_CENTRAL_GPG_SIGNATURE }} \
          -Psigning.keyId=4FB80B8E \
          -PsonatypeUsername=${{ secrets.SONATYPE_USER }} \
          -PsonatypePassword=${{ secrets.SONATYPE_PASSWORD }} \
          -Porg.gradle.internal.http.connectionTimeout=500000 \
          -Porg.gradle.internal.http.socketTimeout=500000
    - name: Publish to Gradle Plugin Portal
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        ./gradlew publishPlugins \
          -Psigning.secretKeyRingFile=${{ github.workspace }}/.gnupg/secring.gpg \
          -Psigning.password=${{ secrets.MAVEN_CENTRAL_GPG_SIGNATURE }} \
          -Psigning.keyId=4FB80B8E \
          -Pgradle.publish.key=${{ secrets.GRADLE_PUBLISH_KEY }} \
          -Pgradle.publish.secret=${{ secrets.GRADLE_PUBLISH_SECRET }}
    - name: Upload coverage to Teamscale
      if: always() && github.event_name == 'push'
      run: |
        curl -L -o teamscale-upload.zip https://github.com/cqse/teamscale-upload/releases/download/v1.0.0/teamscale-upload-linux.zip
        unzip teamscale-upload.zip
        ./teamscale-upload \
          -s ${{ secrets.TS_DEMO_URL }} \
          -p teamscale-jacoco-agent \
          -u ${{ secrets.TS_DEMO_USER }} \
          -a ${{ secrets.TS_DEMO_ACCESSKEY }} \
          -t Coverage \
          -f JACOCO \
          --message Coverage \
          --detect-commit \
          **/jacocoTestReport.xml

  docker:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        file: ./agent/src/docker/Dockerfile
        push: true
