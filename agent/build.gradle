plugins {
	id 'com.teamscale.java-convention'
	id 'de.fntsoftware.gradle.markdown-to-pdf'
	id 'application'

	// we don't want to cause conflicts between our dependencies and the target application
	// since the agent will be loaded with the same class loader as the profiled application
	// so we use the shadow plugin to relocate our dependencies
	id 'com.github.johnrengelman.shadow'
	id 'com.teamscale.coverage'
	id 'com.teamscale.publish'
}

publishAs {
	artifactId = "teamscale-jacoco-agent"
	readableName = "Teamscale JaCoCo Agent"
	description = "JVM profiler that simplifies various aspects around recording and uploading test coverage"
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

ext {
	outputVersion = rootProject.appVersion + '-jacoco-' + jacocoVersion
}

dependencies {
	implementation project(':teamscale-client')
	implementation project(':report-generator')

	implementation "org.jacoco:org.jacoco.core:$jacocoVersion"
	implementation "org.jacoco:org.jacoco.report:$jacocoVersion"
	implementation "org.jacoco:org.jacoco.agent:$jacocoVersion:runtime"

	implementation 'ch.qos.logback:logback-core:1.2.3'
	implementation 'ch.qos.logback:logback-classic:1.2.3'

	implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
	implementation 'com.beust:jcommander:1.81'
	implementation 'com.teamscale:teamscale-lib-commons:7.6.1'

	implementation 'com.squareup.retrofit2:retrofit:2.9.0'
	implementation 'com.sparkjava:spark-core:2.9.3'

	implementation 'com.squareup.moshi:moshi:1.12.0'

	testImplementation project(':tia-client')
	testImplementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
}

mainClassName = 'com.teamscale.jacoco.agent.Main'

shadowJar {
	// Needed as a workaround for https://github.com/johnrengelman/shadow/issues/521
	inputs.property("debug", project.hasProperty("debug"))

	// since this is used as an agent, we want it to always have the same name
	// otherwise people have to adjust their -javaagent parameters after every
	// update
	archiveFileName.set('teamscale-jacoco-agent.jar')
	archiveClassifier.set(null)
	manifest {
		attributes 'Premain-Class': 'com.teamscale.jacoco.agent.PreMain'

		// The jaxb library, which we are shading is a multi release jar, so we have to explicitly "inherit" this attribute
		attributes 'Multi-Release': 'true'
	}

	// Fix relocation of multi version jar
	// Default would be shadow/META-INF/versions/9/, which is wrong
	// See http://openjdk.java.net/jeps/238
	relocate 'META-INF/versions/9/', 'META-INF/versions/9/shadow/'

	mergeServiceFiles()
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
	target = tasks.shadowJar
	onlyIf {
		!project.hasProperty("debug")
	}
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

startShadowScripts {
	applicationName = 'convert'
}

distributions {
	shadow {
		distributionBaseName = 'teamscale-jacoco-agent'
		contents {
			from(readmeToPdf) {
				into 'documentation'
				rename 'README.pdf', 'userguide.pdf'
			}

			filesMatching('**/VERSION.txt') {
				filter {
					it.replace('%APP_VERSION_TOKEN_REPLACED_DURING_BUILD%', outputVersion)
				}
			}
		}
	}
}

tasks.named('shadowDistZip').configure {
	archiveFileName = 'teamscale-jacoco-agent.zip'
}

processResources {
	filesMatching('**/app.properties') {
		filter {
			it.replace('%APP_VERSION_TOKEN_REPLACED_DURING_BUILD%', rootProject.appVersion)
		}
	}
}
